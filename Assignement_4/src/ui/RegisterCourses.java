/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import info5100.university.example.CourseCatalog.Course;
import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.CourseSchedule.CourseSchedule;
import info5100.university.example.CourseSchedule.SeatAssignment;
import info5100.university.example.Department.Department;
import info5100.university.example.Persona.Person;
import info5100.university.example.Persona.StudentProfile;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josephchakola
 */
public class RegisterCourses extends javax.swing.JPanel {

    /**
     * Creates new form RegisterCourses
     */
    JSplitPane splitpane;
    Department computerScience;
    CourseSchedule schedule;
    Person p;
    private StudentProfile sp;

    public RegisterCourses(JSplitPane splitpane, Department department, Person p) {
        initComponents();
        this.splitpane = splitpane;
        this.computerScience = department;
        this.schedule = computerScience.getCourseSchedule("Fall 2024");
        this.p = p;
        this.sp = computerScience.getStudentDirectory().findStudent(p.getPersonId());
        populateTable();
        populateTable1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private boolean alreadyRegistered(CourseOffer co) {
        for (SeatAssignment sa : sp.getCourseList()) {
            if (sa.getCourseOffer().getCourseNumber().equals(co.getCourseNumber())) {
                return true;
            }
        }
        return false;
    }

    private void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) crTable.getModel();
        dtm.setRowCount(0);

        Object[] obj = new Object[4];
        for (CourseOffer co : schedule.getSchedule()) {
            System.out.print(alreadyRegistered(co));
            if (co.getEmptySeat() != null && !alreadyRegistered(co)) {
                Course subjectCourse = co.getSubjectCourse();
                obj[0] = subjectCourse.getCourseNumber();
                obj[1] = subjectCourse.getName();
                obj[2] = computerScience.getDegree().courseType(subjectCourse.getCourseNumber()) ? "Core" : "Elective";
                obj[3] = co.getFacultyProfile() == null ? "TBD" : co.getFacultyProfile().getFacultyId().getName();
                dtm.addRow(obj);
            }
        }
    }

    private void populateTable1() {
        DefaultTableModel dtm = (DefaultTableModel) rcTable.getModel();
        dtm.setRowCount(0);
        Object[] obj = new Object[4];

        for (SeatAssignment sa : sp.getCourseList()) {
            CourseOffer co = schedule.getCourseOfferByNumber(sa.getAssociatedCourse().getCourseNumber());
            obj[0] = sa.getAssociatedCourse().getCourseNumber();
            obj[1] = sa.getAssociatedCourse().getName();
            obj[2] = computerScience.getDegree().courseType(sa.getAssociatedCourse().getCourseNumber()) ? "Core" : "Elective";
            obj[3] = co.getFacultyProfile() == null ? "TBD" : co.getFacultyProfile().getFacultyId().getName();
            dtm.addRow(obj);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        crTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rcTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        crTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Course Type", "Faculty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(crTable);

        jButton1.setText("Register for this course");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Registeration");

        rcTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Course Type", "Faculty"
            }
        ));
        jScrollPane2.setViewportView(rcTable);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setText("Registered Courses");

        jButton2.setText("Delete Course");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(287, 287, 287)
                                    .addComponent(jButton1))
                                .addComponent(jLabel3))
                            .addComponent(jButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(4, 4, 4)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (crTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            JOptionPane.showMessageDialog(this, "Course Registered.");
            CourseOffer co = schedule.getCourseOfferByNumber(crTable.getValueAt(crTable.getSelectedRow(), 0).toString());
            co.assignEmptySeat(sp.getCurrentCourseLoad()).setGrade(3.7F);
            populateTable();
            populateTable1();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (rcTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row");
        } else {
            sp.getTranscript().removeCourse(rcTable.getValueAt(rcTable.getSelectedRow(), 0).toString());
            Course c=computerScience.getCourseCatalog().getCourseByNumber(rcTable.getValueAt(rcTable.getSelectedRow(), 0).toString());
            schedule.getCourseOfferByNumber(rcTable.getValueAt(rcTable.getSelectedRow(), 0).toString()).removeStudent(sp);
            populateTable();
            populateTable1();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        StudentPanel sps  = new StudentPanel(splitpane,  computerScience, p);
        splitpane.setRightComponent(sps);
        
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable crTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable rcTable;
    // End of variables declaration//GEN-END:variables
}
